[gd_scene load_steps=9 format=3 uid="uid://pg0odixrsras"]

[ext_resource type="PackedScene" uid="uid://beoes2juuixt6" path="res://models/scenes/ak47.tscn" id="2_7t2y4"]
[ext_resource type="Script" uid="uid://ckewmm6nkqj41" path="res://models/scenes/camera_3d.gd" id="2_h2up4"]
[ext_resource type="Script" uid="uid://ceve7g5r86daw" path="res://models/scenes/ak_47.gd" id="3_l44vs"]

[sub_resource type="GDScript" id="GDScript_l44vs"]
script/source = "extends CharacterBody3D

@onready var head: Node3D = $head
@onready var headbob: AnimationPlayer = $headbob
@onready var camera: Camera3D = $head/Camera3D
var bullet = load(\"res://models/scenes/ak47_bullet.tscn\")
@onready var ak_47_anim: AnimationPlayer = $head/Camera3D/ak47/ak47_anim
@onready var pos: Node3D = $head/Camera3D/ak47/pos
@export var fire_rate := 0.1  # seconds between shots
var time_since_last_shot := 0.0
var current_speed = 5.0
@export var walking_speed = 4.0
const sprinting_speed = 8.0
const crouching_speed = 2.0
const JUMP_VELOCITY = 4.5
const mouse_sensitivity = 0.15
const crouching_depth = -0.5
var lerp_speed = 10.0
var direction = Vector3.ZERO
var is_ads := false

signal player_hit

func _ready() -> void:
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)

func _input(event: InputEvent) -> void:
	if event is InputEventMouseMotion:
		# Reduce mouse sensitivity when aiming for more precision
		var ads_sensitivity_modifier = 0.6 if is_ads else 1.0
		rotate_y(deg_to_rad(-event.relative.x * mouse_sensitivity * ads_sensitivity_modifier))
		head.rotate_x(deg_to_rad(-event.relative.y * mouse_sensitivity * ads_sensitivity_modifier))
		head.rotation.x = clamp(head.rotation.x, deg_to_rad(-79),deg_to_rad(89))
		
func _physics_process(delta: float) -> void:
	
	if Input.is_action_pressed(\"crouch\"):
		current_speed = crouching_speed 
		head.position.y = lerp(head.position.y, 1.8 + crouching_depth, lerp_speed*delta)
	else:
		head.position.y = lerp(head.position.y, 1.8, lerp_speed*delta)
		
		# Don't allow sprinting while ADS
		if Input.is_action_pressed(\"sprint\") and !is_ads:
			current_speed = sprinting_speed
			headbob.speed_scale = 1.5
		else:
			current_speed = walking_speed
			headbob.speed_scale = 1.0
	
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta
		
	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		
	# Handle reload
	if Input.is_action_just_pressed(\"reload\"):
		ak_47_anim.play(\"ak47_reload\")
		
	# Handle ADS (hold to aim)
	if Input.is_action_just_pressed(\"ads\") and !is_ads:
		enter_ads()
		ak_47_anim.play(\"ak_47_ads\")
	elif Input.is_action_just_released(\"ads\") and is_ads:
		ak_47_anim.play(\"ak_47_zoom_out\")
		exit_ads()
	
	# Gun shot
	if Input.is_action_just_pressed(\"click\"):
		fire_weapon()
		
	if Input.is_action_pressed(\"click\"):
		time_since_last_shot += delta
		if time_since_last_shot >= fire_rate:
			time_since_last_shot = 0.0
			fire_weapon()
	else:
		time_since_last_shot = fire_rate  # Reset so first shot fires instantly again
		
	# Get the input direction and handle the movement/deceleration.
	var input_dir := Input.get_vector(\"left\", \"right\", \"forward\", \"backward\")
	direction = lerp(direction, (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized(), lerp_speed*delta)
	if direction:
		velocity.x = direction.x * current_speed
		velocity.z = direction.z * current_speed
		if velocity.length() > 0.1 and !is_ads:  # Disable headbob during ADS
			headbob.play(\"headbob_walk\")
		else:
			headbob.pause()
	else:
		velocity.x = move_toward(velocity.x, 0, current_speed)
		velocity.z = move_toward(velocity.z, 0, current_speed)
	move_and_slide()

func fire_weapon() -> void:
	# Spawn bullet
	var instance = bullet.instantiate()
	instance.position = pos.global_position
	instance.transform.basis = pos.global_transform.basis
	get_parent().add_child(instance)
	
	# Play weapon animation
	ak_47_anim.speed_scale = 1.0
	
	# Call the camera shake/recoil function
	if camera.has_method(\"shoot\"):
		camera.shoot()

# Enter ADS mode
func enter_ads() -> void:
	is_ads = true
	ak_47_anim.play(\"ak47_ads\")
	if camera.has_method(\"start_ads\"):
		camera.start_ads()

# Exit ADS mode
func exit_ads() -> void:
	is_ads = false
	ak_47_anim.play_backwards(\"ak47_ads\")
	if camera.has_method(\"stop_ads\"):
		camera.stop_ads()

func hit():
	emit_signal(\"player_hit\")
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_48j15"]

[sub_resource type="Animation" id="Animation_2kald"]
length = 0.001
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("head/Camera3D:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Vector3(0, 0.521764, 0)]
}

[sub_resource type="Animation" id="Animation_48j15"]
resource_name = "headbob_walk"
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("head/Camera3D:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.232969, 0.5, 0.766667),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Vector3(0, 0.521764, 0), Vector3(-0.085, 0.592, 0), Vector3(0, 0.521764, 0), Vector3(0.1, 0.582, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_b0n65"]
_data = {
&"RESET": SubResource("Animation_2kald"),
&"headbob_walk": SubResource("Animation_48j15")
}

[node name="Controller" type="CharacterBody3D"]
script = SubResource("GDScript_l44vs")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_48j15")

[node name="head" type="Node3D" parent="."]

[node name="Camera3D" type="Camera3D" parent="head"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.521764, 0)
script = ExtResource("2_h2up4")

[node name="ak47" parent="head/Camera3D" instance=ExtResource("2_7t2y4")]
transform = Transform3D(-4.37114e-08, 0, 1, 0, 1, 0, -1, 0, -4.37114e-08, 0.135, -0.23, 0.035)
script = ExtResource("3_l44vs")

[node name="pos" type="Node3D" parent="head/Camera3D/ak47"]
transform = Transform3D(-2.88137e-08, 0, -0.65918, 0, 0.65918, 0, 0.65918, 0, -2.88137e-08, 0.834643, 0.13609, 0.00299998)

[node name="headbob" type="AnimationPlayer" parent="."]
libraries = {
&"": SubResource("AnimationLibrary_b0n65")
}

[editable path="head/Camera3D/ak47"]
